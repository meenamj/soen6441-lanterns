
SOFTWARE ARCHITECTURE DOCUMENT


LANTERNS: THE HARVEST FESTIVAL
Project Build 1




SUBMITTED TO:					SUBMITTED BY:
Steven Winikoff					Adigun, Idris (27128525)
Bhut, Nirav (27182562)
Kaur, Avneet (26860397)
							Phichitsakuldes, Nuttakit (27804822)
							Yellepeddi, Meenakshi Jyothi (27398247)






Contents
1.	INTRODUCTION	2
1.1	Purpose and Scope:	2
1.2	Document Evolution	2
2.	ARCHITECTURAL REPRESENTATION	2
3.	SOFTWARE ARCHITECTURE FOR LANTERNS GAME	3




















1.	INTRODUCTION
1.1	Purpose and Scope:
The main purpose of this document is to describe the software architecture and design for the Lanterns game. This document aims to provide the high – level information about the architecture of the game with its development showing the sufficient information and references to relevant information to allow them to effectively support it. Lanterns are the harvest festival where players act as artisans decorating the palace lake with floating lanterns. The artisan who earns the most honors before the festival starts wins the game.
1.2	Document Evolution
This document is intended to change as it is not totally completed before the development is done and it is expected to be updated and refined all through the development process of the next two builds with design developed, refactored and finalized. The changes that occur at later stages are expected to have more detailed descriptions of the java classes. as we move forward with the development of the game, the features of the game will increase and so will the document will change with time. 
2.	ARCHITECTURAL REPRESENTATION
The current software architecture of Lanterns game is concerned with the number of players involved, player’s current turn and the involvement of lantern card and lake tiles. The game also gives various options which can be listed below:
•	To save the current game state to a file: The player is allowed to save the state of the current game in the player specified file.
•	To load the game from the saved file: The player is having an option to load the game from the given file. While loading from that file, objects of the respective classes are initialized and populated with the data from that file. 
•	The ability to display the game in the text mode.
To describe the software architecture of the Lanterns game in more detail, Java classes that have been used for the project are defined below explaining the purpose of those classes:
CLASS	PURPOSE
DedicationToken	Dedication Token is a card to get the score Player can change from the lantern card to dedication token.
FourofAKindToken	This is one of the dedication token when players have four lantern cards which have the same color, the player can exchange the card.
Game	This class is used to run the game. The name of the game is Lanterns: The harvest festival.
GameFile	This class is used to manage the game file.
GenericToken	Generic token is one of the dedication token when players can change the four of a kind, three pair or seven unique token, but when there is empty in the stack, the player can exchange this card.
LakeTile	Lake tile is a card to place to the game after that player can get lantern cards following the direction of the placed lake tile.
LanternCard	Lantern card is a card which player can get after placing lake tile. 
PlayArea	Play area is a place for players to put a lake tile and draw dedication tokens.
Player	Player class is the person who play the game.
SevenUniqueToken	Seven unique token is one of the dedication token when players have seven lantern cards which have the all different color, the player can exchange this card.
Supply	This class will be used for seven lantern stacks creation.
ThreePairToken	Three pair token is one of the dedication token when players have three pair lantern cards, the player can exchange this card. 
Color	This class is used to show the color of lantern cards, lake tiles for playing the game.

3.	SOFTWARE ARCHITECTURE FOR LANTERNS GAME

We have used 4+1view model of architecture for our project. The four views of this model are concerned with:
•	Logical View
•	Development View
•	Process View
•	Physical View
•	Scenarios
For the build 1 of our project, we have used development and physical views of the view model of architecture. The detailed explanation is as follows:
DEVELOPMENT VIEW: This view illustrates a system from a programmer’s perspective and is concerned with the software management. This can be clearly explained by showing the classes and their relationship between them. On the whole we can say that this will show the complete Java implementation for build 1 of our project. 
The below attached class diagram depicts the classes, interface and relationship between the classes involved in our project.
 
Figure 1: Class Diagram for Lanterns game
PHYSICAL VIEW: This view depicts the system from a system engineer’s point of view. It is concerned with the topology of software components on the physical layer and the communication between these components. From our project point of view, the points that are important to follow are:
	Extract the zip file of the project.
	Open the same in your Java Workspace.
	Open Eclipse Luna and Open the project in it.
	When completed run the Game class.






